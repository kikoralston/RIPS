library(ggplot2)
library(plyr)
library(dplyr)
library(lubridate)
library(tidyr)
library(timeDate)
source('~/R/gdrive.R')
View(share.file.print.url)
View(plot.and.share)
library(ggplot2)
library(plyr)
library(dplyr)
library(lubridate)
library(tidyr)
library(timeDate)
source('~/R/gdrive.R')
setwd('~/Google Drive/CMU/RIPS/git/demand/R/')
path.out <- '~/Google Drive/CMU/RIPS/reports/20180112/'
source('readFERC.R')
source('excel.R')
path.uw <- '~/Documents/UW_data/RH_airT_19790101_20161231.Francisco/RH_airT_19790101_20161231.Nashville.csv'
df.station <- readRDS(file='~/Google Drive/CMU/RIPS/R/data/723270_13897_TN.rds')
df.gridded <- read.csv(file=path.uw, stringsAsFactors = FALSE)
df.gridded$X <- as.POSIXct(df.gridded$X, tz='GMT')
df.combined <- left_join(df.station, df.gridded, by=c("time"="X"))
df.combined <- df.combined[order(df.combined$time), ]
fname <- paste0(path.out, 'ecdf.png')
png(filename = fname)
plot(ecdf(df.station$temp), verticals=TRUE, col='black', xlab='T', main='Empirical cdf')
plot(ecdf(df.gridded$air_T), verticals=TRUE, add=TRUE, col='red', lty='solid')
legend(x="topleft", legend=c('station', 'gridded'), lty=c('solid', 'solid'), col=c('black', 'red'))
dev.off()
share.file.print.url(fname)
fname <- paste0(path.out, 'scatter1.png')
png(filename =  fname)
lab <- sprintf("Corr: %.4f", cor(df.combined$temp, df.combined$air_T,
use ='complete.obs'))
plot(x=df.combined$temp, y=df.combined$air_T,  xlab='station', ylab='gridded')
abline(a=0, b=1)
text(x=min(df.combined$temp, na.rm=TRUE), y=max(df.combined$air_T, na.rm=TRUE),
label=lab,
adj=c(0,1))
dev.off()
share.file.print.url(fname)
# get daily max and mins
xx <- df.combined %>% mutate(day = date(time)) %>% group_by(day) %>%
summarize(max.station=max(temp, na.rm=TRUE),
max.gridded=max(air_T, na.rm=TRUE),
min.station=min(temp, na.rm=TRUE),
min.gridded=min(air_T, na.rm=TRUE))
fname <- paste0(path.out, 'scatter_day.png')
png(filename =  fname)
par(mfrow=c(1,2))
lab <- sprintf("Corr: %.4f", cor(xx$max.station, xx$max.gridded,
use ='complete.obs'))
plot(x=xx$max.station, y=xx$max.gridded,  xlab='station', ylab='gridded',
main='max')
abline(a=0, b=1)
text(x=min(xx$max.station, na.rm=TRUE), y=max(xx$max.gridded, na.rm=TRUE),
label=lab,
adj=c(0,1))
lab <- sprintf("Corr: %.4f", cor(xx$min.station, xx$min.gridded,
use ='complete.obs'))
plot(x=xx$min.station, y=xx$min.gridded,  xlab='station', ylab='gridded',
main='Min')
abline(a=0, b=1)
text(x=min(xx$min.station, na.rm=TRUE), y=max(xx$min.gridded, na.rm=TRUE),
label=lab,
adj=c(0,1))
dev.off()
share.file.print.url(fname)
fname <- paste0(path.out, 'compare_time_series.png')
png(filename =  )
plot(df.combined$time[1:744], df.combined$temp[1:744], type='l', xlab='time', ylab='Air temp')
lines(df.combined$time[1:744], df.combined$air_T[1:744], lty='dashed', col='red')
legend(x="topleft", legend=c('station', 'gridded'), lty=c('solid', 'dashed'), col=c('black', 'red'))
dev.off()
share.file.print.url(fname)
fname <- paste0(path.out, 'mean_hourly_temp.png')
png(filename =  fname)
df.g2 <- df.gridded %>% mutate(hour=hour(X), month=month(X)) %>% group_by(month, hour) %>%
summarize(value=mean(air_T, na.rm = TRUE))
df.s2 <- df.station %>% mutate(hour=hour(time), month=month(time)) %>% group_by(month, hour) %>%
summarize(value=mean(temp, na.rm = TRUE))
xx <- full_join(df.g2, df.s2, by=c('month', 'hour'))
names(xx) <- c(names(xx)[1:2], 'gridded', 'station')
xx <- gather(xx, key='type', value='temp', gridded:station)
g <- ggplot(data=xx) + geom_line(mapping = aes(x=hour, y=temp, colour=type)) + facet_wrap(~month, ncol=3, nrow=4) +
ggtitle('Mean hourly air temp in each month') + theme_bw()
g
dev.off()
share.file.print.url(fname)
fname <- paste0(path.out, 'mean_offset.png')
png(filename =  fname)
yy <- xx %>% spread(key=type, value=temp) %>% mutate(delta=gridded-station) %>%
gather(key='type', value='delta', delta) %>% select(month, hour, delta)
g <- ggplot(data=yy) + geom_line(mapping = aes(x=hour, y=delta)) + facet_wrap(~month, ncol=3, nrow=4)
g <- g + ggtitle('Mean difference between gridded and station air temp')  + theme_bw()
g
dev.off()
share.file.print.url(fname)
remote.ferc <- TRUE
ferc.zip <- 'form714-database.zip'
df.ferc.final <- readFercNew(get.online = remote.ferc, ferc.zip = ferc.zip)
year.end <- max(year(df.ferc.final$time))
year.ini <- min(year(df.ferc.final$time))
df.total <- full_join(df.combined, df.ferc.final, by='time')
fname <- paste0(path.out, 'scatter_temp_load.png')
png(filename =  fname, width = 8.5, height = width*2, units = "in")
par(mfrow=c(2,1))
plot(x=df.total$temp, y=df.total$load, main='Station data', xlab='Temperature',
ylab= 'Load')
plot(x=df.total$air_T, y=df.total$load, main='Gridded data', xlab='Temperature',
ylab= 'Load')
dev.off()
share.file.print.url(fname)
# ------------------------------------------------------------------------s
# Prepare data frame for regression
source('auxiliary_functions.R')
source('rips_demand.R')
df.final <- df.total %>%
transmute(time=time, temp=air_T,
dp=convertRelHum2DewPoint(rel_humid, air_T),
load=load) %>%
as.data.frame()
df.final <- df.final %>% arrange(time)
# there are some observations with demand = 0 which is not possible
# set them to NA (not observed)
df.final$load[df.final$load == 0] <- NA
# there are some observations where temperature is NA but dew.point
# has a numerical value. This can cause error in the interaction term
df.final$dp[is.na(df.final$temp)] <- NA
df.final$temp[is.na(df.final$dp)] <- NA
# create new columns for regression
# calendar variables
df.final <- compute.calendar.variables(df.final)
df.final <- cbind(data.frame(year=year(df.final$time)), df.final)
df.final <- df.final %>% filter(year >= year.ini & year <= year.end)
temp.breaks <- c(-20, 0, 10, 20, 30)
lm.model <- fit.lm.model(df=df.final, temp.breaks=temp.breaks,
type.humidity = NULL)
g <- plot.temp.load(reg.model=lm.model$model,
data.set=df.final,
temp.breaks = temp.breaks,
temp = c(-20:40), inter.term = NULL,
dir.out = path.out,
add.marg.hist = TRUE,
normalize.values = TRUE)
fname <- paste0(path.out, 'plotTempLoad.png')
share.file.print.url(fname)
path.out
fname
plot(x=df.total$temp, y=df.total$load, main='Station data', xlab='Temperature',
ylab= 'Load')
fname <- paste0(path.out, 'scatter_temp_load.png')
png(filename =  fname, width = 8.5, height = width*2, units = "in")
par(mfrow=c(2,1))
plot(x=df.total$temp, y=df.total$load, main='Station data', xlab='Temperature',
ylab= 'Load')
plot(x=df.total$air_T, y=df.total$load, main='Gridded data', xlab='Temperature',
ylab= 'Load')
dev.off()
fname <- paste0(path.out, 'scatter_temp_load.png')
png(filename =  fname, width = 8.5, height = width*2, units = "in", res=300)
par(mfrow=c(2,1))
plot(x=df.total$temp, y=df.total$load, main='Station data', xlab='Temperature',
ylab= 'Load')
plot(x=df.total$air_T, y=df.total$load, main='Gridded data', xlab='Temperature',
ylab= 'Load')
dev.off()
png(filename =  fname, width = 8.5, height = 8.5*2, units = "in", res=300)
par(mfrow=c(2,1))
plot(x=df.total$temp, y=df.total$load, main='Station data', xlab='Temperature',
ylab= 'Load')
plot(x=df.total$air_T, y=df.total$load, main='Gridded data', xlab='Temperature',
ylab= 'Load')
dev.off()
